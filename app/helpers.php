<?php
if (! function_exists('arrayToTable')) {
	function arrayToTable($array){
		$encabezado = array_keys($array[0]);
		$t = "<table border = '1'>";
		$t.= "<tr><td  style='font-weight:bold'>Nro</td>";

		$t.= "<td style='font-weight:bold'>".implode("</td><td style='font-weight:bold'>", $encabezado)."</td>";
		$t.= "</tr>";
		$cont = 1;
		foreach($array as $fileAux){
			$t.= "<tr>";
			$t.= "<td>".$cont."</td><td>".implode("</td><td>",$fileAux)."</td>";
			$t.= "</tr>";
			$cont++;
		}
		$t.= "</table>";			
		
		return $t;
	}
}

if (! function_exists('multibyte_trim')) {
	function multibyte_trim($str)
	{
		if (!function_exists("mb_trim") || !extension_loaded("mbstring")) {
			return preg_replace("/(^\s+)|(\s+$)/u", "", $str);
		} else {
			return mb_trim($str);
		}
	}
}

if (! function_exists('arreglo')) {
    /**
     * Helper to grab the application name.
     *
     * @return mixed
     */
    function arreglo($arr)
    {
        echo "<pre>";
		print_r($arr);
		echo "</pre>";
    }
}

/**
 * Global helpers file with misc functions.
 */
if (! function_exists('app_name')) {
    /**
     * Helper to grab the application name.
     *
     * @return mixed
     */
    function app_name()
    {
        return config('app.name');
    }
}

if (! function_exists('access')) {
    /**
     * Access (lol) the Access:: facade as a simple function.
     */
    function access()
    {
        return app('access');
    }
}

if (! function_exists('history')) {
    /**
     * Access the history facade anywhere.
     */
    function history()
    {
        return app('history');
    }
}

if (! function_exists('gravatar')) {
    /**
     * Access the gravatar helper.
     */
    function gravatar()
    {
        return app('gravatar');
    }
}

if (! function_exists('includeRouteFiles')) {

    /**
     * Loops through a folder and requires all PHP files
     * Searches sub-directories as well.
     *
     * @param $folder
     */
    function includeRouteFiles($folder)
    {
        try {
            $rdi = new recursiveDirectoryIterator($folder);
            $it = new recursiveIteratorIterator($rdi);

            while ($it->valid()) {
                if (! $it->isDot() && $it->isFile() && $it->isReadable() && $it->current()->getExtension() === 'php') {
                    require $it->key();
                }

                $it->next();
            }
        } catch (Exception $e) {
            echo $e->getMessage();
        }
    }
}

if (! function_exists('getRtlCss')) {

    /**
     * The path being passed is generated by Laravel Mix manifest file
     * The webpack plugin takes the css filenames and appends rtl before the .css extension
     * So we take the original and place that in and send back the path.
     *
     * @param $path
     *
     * @return string
     */
    function getRtlCss($path)
    {
        $path = explode('/', $path);
        $filename = end($path);
        array_pop($path);
        $filename = rtrim($filename, '.css');

        return implode('/', $path).'/'.$filename.'.rtl.css';
    }
}

if (! function_exists('homeRoute')) {

    /**
     * Return the route to the "home" page depending on authentication/authorization status.
     *
     * @return string
     */
    function homeRoute()
    {
		//accder al dashboar del superadmin
        if (access()->allow('view-backend')) {
            return 'admin.dashboard';
        }
		//elseif (auth()->check()) {
		//acceder al dashboard del sistema	
		if(access()->allow('view-sistema')){	
            return 'sistema.dashboard';
        }
		
		if(access()->allow('view-postulantes')){	
            return 'frontend.personal.inicio';
        }

		if(access()->allow('view-estudiante')){	
            return 'frontend.estudiante.edit';
        }

		//si es logeo solamente
		//if (auth()->check()) {
		//	 return 'frontend.user.dashboard';
		//}
		
		return 'frontend.index';
    }
}
